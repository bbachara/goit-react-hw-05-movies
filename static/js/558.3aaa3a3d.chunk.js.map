{"version":3,"file":"static/js/558.3aaa3a3d.chunk.js","mappings":"oLA2DA,UAxDA,WACE,IAAAA,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAA8BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAnCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAA8BT,EAAAA,EAAAA,WAAS,GAAMU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAEpBG,EAAe,WACdV,IACLS,GAAW,GACXE,MAAM,4FAADC,OACyFC,mBAC1Fb,KAGDc,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,IAChCF,MAAK,SAAAG,GACJZ,EAAWY,EAAKb,SAChBK,GAAW,EACb,IACCS,OAAM,SAAAC,GACLC,QAAQD,MAAM,0BAA2BA,GACzCV,GAAW,EACb,IACJ,EAQA,OACEY,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mBACJC,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACLC,MAAOzB,EACP0B,SAAU,SAAAC,GAAC,OAAI1B,EAAW0B,EAAEC,OAAOH,MAAM,EACzCI,WAbiB,SAAAC,GACH,UAAdA,EAAMC,KACRrB,GAEJ,EAUMsB,YAAY,0BAEdT,EAAAA,EAAAA,KAAA,UAAQU,QAASvB,EAAaY,SAAC,WAC9Bd,GACCe,EAAAA,EAAAA,KAAA,OAAAD,SAAK,gBAELC,EAAAA,EAAAA,KAAA,MAAAD,SACGlB,EAAQ8B,KAAI,SAAAC,GAAK,OAChBZ,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAACC,GAAE,WAAAzB,OAAauB,EAAMG,IAAKhB,SAAEa,EAAMI,SADjCJ,EAAMG,GAEV,QAMjB,C","sources":["components/Movies.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Movies() {\n  const [keyword, setKeyword] = useState('');\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const handleSearch = () => {\n    if (!keyword) return; // Prevents searching with an empty query\n    setLoading(true);\n    fetch(\n      `https://api.themoviedb.org/3/search/movie?api_key=35349a736eae14c1caed3005a307c333&query=${encodeURIComponent(\n        keyword\n      )}`\n    )\n      .then(response => response.json())\n      .then(data => {\n        setResults(data.results);\n        setLoading(false);\n      })\n      .catch(error => {\n        console.error('Error searching movies:', error);\n        setLoading(false);\n      });\n  };\n\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      handleSearch();\n    }\n  };\n\n  return (\n    <div>\n      <h1>Search Movies</h1>\n      <input\n        type=\"text\"\n        value={keyword}\n        onChange={e => setKeyword(e.target.value)}\n        onKeyPress={handleKeyPress} // Listening for key presses\n        placeholder=\"Enter search keyword\"\n      />\n      <button onClick={handleSearch}>Search</button>\n      {loading ? (\n        <div>Loading...</div>\n      ) : (\n        <ul>\n          {results.map(movie => (\n            <li key={movie.id}>\n              <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nexport default Movies;\n"],"names":["_useState","useState","_useState2","_slicedToArray","keyword","setKeyword","_useState3","_useState4","results","setResults","_useState5","_useState6","loading","setLoading","handleSearch","fetch","concat","encodeURIComponent","then","response","json","data","catch","error","console","_jsxs","children","_jsx","type","value","onChange","e","target","onKeyPress","event","key","placeholder","onClick","map","movie","Link","to","id","title"],"sourceRoot":""}