{"version":3,"file":"static/js/583.42599901.chunk.js","mappings":"mKAmBA,IAhBe,WACb,OACEA,EAAAA,EAAAA,KAACC,EAAAA,GAAa,CACZC,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,MAAM,OACNC,YAAY,IACZC,kBAAkB,OAClBC,UAAU,yBACVC,aAAc,CAAC,EACfC,aAAa,IAGnB,C,4HCwEA,MA9EA,WAAyB,IAADC,EACdC,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAA0BC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAA8BL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GACpBG,GAAWC,EAAAA,EAAAA,MAEXC,EAAuB,QAAjBf,GADKgB,EAAAA,EAAAA,MACOC,aAAK,IAAAjB,OAAA,EAAdA,EAAgBkB,KAmB/B,OAlBAC,QAAQC,IAAI,aAAcL,IAE1BM,EAAAA,EAAAA,YAAU,WACRT,GAAW,GACXU,MAAM,sCAADC,OACmCtB,EAAO,8CAE5CuB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,IAChCF,MAAK,SAAAG,GACJnB,EAASmB,GACTf,GAAW,EACb,IACCgB,OAAM,SAAAC,GACLV,QAAQU,MAAM,gCAAiCA,GAC/CjB,GAAW,EACb,GACJ,GAAG,CAACX,IAEAU,GAAgBtB,EAAAA,EAAAA,KAACyC,EAAAA,EAAM,CAACC,MAAO,CAAEC,OAAQ,YACxCzB,GAWH0B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAChCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC5B9C,EAAAA,EAAAA,KAAA,UAAQ6C,UAAU,iBAAiBE,QAX1B,WAEXvB,EADa,WAAXE,EACO,UAEA,IAEb,EAKyDoB,SAAC,UAGpD9C,EAAAA,EAAAA,KAAA,OACE6C,UAAU,oBACVG,IAAG,kCAAAd,OAAoChB,EAAM+B,aAC7CC,IAAKhC,EAAMiC,YAGfP,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sBAAqBC,SAAA,EAClC9C,EAAAA,EAAAA,KAAA,MAAA8C,SAAK5B,EAAMiC,SACXP,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EACE9C,EAAAA,EAAAA,KAAA,UAAA8C,SAAQ,cAAkB,IAAE5B,EAAMkC,aAEpCR,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EACE9C,EAAAA,EAAAA,KAAA,UAAA8C,SAAQ,YAAiB,IACxB5B,EAAMmC,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAI,IAAEC,KAAK,UAE9Cb,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EACE9C,EAAAA,EAAAA,KAAA,UAAA8C,SAAQ,kBAAsB,IAAE5B,EAAMwC,iBAExCd,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EACE9C,EAAAA,EAAAA,KAAA,UAAA8C,SAAQ,YAAgB,IAAE5B,EAAMyC,aAAa,YAE/Cf,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACE9C,EAAAA,EAAAA,KAAC4D,EAAAA,GAAI,CAACC,GAAG,OAAOjC,MAAO,CAAEC,KAAMH,GAASoB,SAAC,SAEjC,IAAI,IACV,KACF9C,EAAAA,EAAAA,KAAC4D,EAAAA,GAAI,CAACC,GAAG,UAAUjC,MAAO,CAAEC,KAAMH,GAASoB,SAAC,gBAI9C9C,EAAAA,EAAAA,KAAC8D,EAAAA,GAAM,WA9CM9D,EAAAA,EAAAA,KAAA,OAAA8C,SAAK,kBAkD1B,C","sources":["components/Loader.js","components/MovieDetails.js"],"sourcesContent":["import React from 'react';\nimport { RotatingLines } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <RotatingLines\n      visible={true}\n      height=\"96\"\n      width=\"96\"\n      color=\"grey\"\n      strokeWidth=\"5\"\n      animationDuration=\"0.75\"\n      ariaLabel=\"rotating-lines-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"\"\n    />\n  );\n};\n\nexport default Loader;\n","import React, { useEffect, useState } from 'react';\nimport {\n  useParams,\n  Link,\n  Outlet,\n  useNavigate,\n  useLocation,\n} from 'react-router-dom';\nimport Loader from './Loader';\nimport './MovieDetails.css';\n\nfunction MovieDetails() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const origin = location.state?.from;\n  console.log('Origin is:', origin);\n\n  useEffect(() => {\n    setLoading(true);\n    fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=35349a736eae14c1caed3005a307c333`\n    )\n      .then(response => response.json())\n      .then(data => {\n        setMovie(data);\n        setLoading(false);\n      })\n      .catch(error => {\n        console.error('Error fetching movie details:', error);\n        setLoading(false);\n      });\n  }, [movieId]);\n\n  if (loading) return <Loader style={{ margin: '0 auto' }} />;\n  if (!movie) return <div>No movie found</div>;\n\n  const goBack = () => {\n    if (origin === 'Movies') {\n      navigate('/movies');\n    } else {\n      navigate('/');\n    }\n  };\n\n  return (\n    <div className=\"movie-details-div\">\n      <div className=\"movie-details\">\n        <button className=\"go-back-button\" onClick={goBack}>\n          Back\n        </button>\n        <img\n          className=\"movie-details-img\"\n          src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n          alt={movie.title}\n        />\n      </div>\n      <div className=\"movie-details-descr\">\n        <h1>{movie.title}</h1>\n        <p>\n          <strong>Overview:</strong> {movie.overview}\n        </p>\n        <p>\n          <strong>Genres:</strong>{' '}\n          {movie.genres.map(genre => genre.name).join(', ')}\n        </p>\n        <p>\n          <strong>Release Date:</strong> {movie.release_date}\n        </p>\n        <p>\n          <strong>Rating:</strong> {movie.vote_average} / 10\n        </p>\n        <div>\n          <Link to=\"cast\" state={{ from: origin }}>\n            Cast\n          </Link>{' '}\n          |{' '}\n          <Link to=\"reviews\" state={{ from: origin }}>\n            Reviews\n          </Link>\n        </div>\n        <Outlet />\n      </div>\n    </div>\n  );\n}\n\nexport default MovieDetails;\n"],"names":["_jsx","RotatingLines","visible","height","width","color","strokeWidth","animationDuration","ariaLabel","wrapperStyle","wrapperClass","_location$state","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movie","setMovie","_useState3","_useState4","loading","setLoading","navigate","useNavigate","origin","useLocation","state","from","console","log","useEffect","fetch","concat","then","response","json","data","catch","error","Loader","style","margin","_jsxs","className","children","onClick","src","poster_path","alt","title","overview","genres","map","genre","name","join","release_date","vote_average","Link","to","Outlet"],"sourceRoot":""}